
a.out:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	insb   (%dx),%es:(%edi)
 8048136:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804813d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048144:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    $0x0,%al
 804814a:	00 00                	add    %al,(%eax)
 804814c:	10 00                	adc    %al,(%eax)
 804814e:	00 00                	add    %al,(%eax)
 8048150:	01 00                	add    %eax,(%eax)
 8048152:	00 00                	add    %al,(%eax)
 8048154:	47                   	inc    %edi
 8048155:	4e                   	dec    %esi
 8048156:	55                   	push   %ebp
 8048157:	00 00                	add    %al,(%eax)
 8048159:	00 00                	add    %al,(%eax)
 804815b:	00 02                	add    %al,(%edx)
 804815d:	00 00                	add    %al,(%eax)
 804815f:	00 06                	add    %al,(%esi)
 8048161:	00 00                	add    %al,(%eax)
 8048163:	00 0f                	add    %cl,(%edi)
 8048165:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	14 00                	adc    $0x0,%al
 804816e:	00 00                	add    %al,(%eax)
 8048170:	03 00                	add    (%eax),%eax
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 51 2b             	add    %dl,0x2b(%ecx)
 804817a:	e8 ed d4 a3 51       	call   59a8566c <_end+0x51a3b64c>
 804817f:	15 b5 02 7b 6d       	adc    $0x6d7b02b5,%eax
 8048184:	22 a5 e3 4c 30 25    	and    0x25304ce3(%ebp),%ah
 804818a:	9a                   	.byte 0x9a
 804818b:	55                   	push   %ebp

Disassembly of section .hash:

0804818c <.hash>:
 804818c:	03 00                	add    (%eax),%eax
 804818e:	00 00                	add    %al,(%eax)
 8048190:	06                   	push   %es
 8048191:	00 00                	add    %al,(%eax)
 8048193:	00 01                	add    %al,(%ecx)
 8048195:	00 00                	add    %al,(%eax)
 8048197:	00 04 00             	add    %al,(%eax,%eax,1)
 804819a:	00 00                	add    %al,(%eax)
 804819c:	03 00                	add    (%eax),%eax
	...
 80481aa:	00 00                	add    %al,(%eax)
 80481ac:	05 00 00 00 02       	add    $0x2000000,%eax
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 00                	add    %al,(%eax)
 80481b5:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.hash:

080481b8 <.gnu.hash>:
 80481b8:	02 00                	add    (%eax),%al
 80481ba:	00 00                	add    %al,(%eax)
 80481bc:	05 00 00 00 01       	add    $0x1000000,%eax
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 05 00 00 00 00    	add    %al,0x0
 80481c9:	20 00                	and    %al,(%eax)
 80481cb:	20 00                	and    %al,(%eax)
 80481cd:	00 00                	add    %al,(%eax)
 80481cf:	00 05 00 00 00 ad    	add    %al,0xad000000
 80481d5:	4b                   	dec    %ebx
 80481d6:	e3 c0                	jecxz  8048198 <_init-0x148>

Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	01 00                	add    %eax,(%eax)
	...
 80481f2:	00 00                	add    %al,(%eax)
 80481f4:	20 00                	and    %al,(%eax)
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	35 00 00 00 00       	xor    $0x0,%eax
 80481fd:	00 00                	add    %al,(%eax)
 80481ff:	00 00                	add    %al,(%eax)
 8048201:	00 00                	add    %al,(%eax)
 8048203:	00 12                	add    %dl,(%edx)
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 2e                	add    %ch,(%esi)
	...
 8048211:	00 00                	add    %al,(%eax)
 8048213:	00 12                	add    %dl,(%edx)
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 29                	add    %ch,(%ecx)
	...
 8048221:	00 00                	add    %al,(%eax)
 8048223:	00 12                	add    %dl,(%edx)
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 1a                	add    %bl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 7c 85 04          	add    %bh,0x4(%ebp,%eax,4)
 804822f:	08 04 00             	or     %al,(%eax,%eax,1)
 8048232:	00 00                	add    %al,(%eax)
 8048234:	11 00                	adc    %eax,(%eax)
 8048236:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

08048238 <.dynstr>:
 8048238:	00 5f 5f             	add    %bl,0x5f(%edi)
 804823b:	67 6d                	addr16 insl (%dx),%es:(%di)
 804823d:	6f                   	outsl  %ds:(%esi),(%dx)
 804823e:	6e                   	outsb  %ds:(%esi),(%dx)
 804823f:	5f                   	pop    %edi
 8048240:	73 74                	jae    80482b6 <_init-0x2a>
 8048242:	61                   	popa   
 8048243:	72 74                	jb     80482b9 <_init-0x27>
 8048245:	5f                   	pop    %edi
 8048246:	5f                   	pop    %edi
 8048247:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804824b:	63 2e                	arpl   %bp,(%esi)
 804824d:	73 6f                	jae    80482be <_init-0x22>
 804824f:	2e 36 00 5f 49       	add    %bl,%cs:%ss:0x49(%edi)
 8048254:	4f                   	dec    %edi
 8048255:	5f                   	pop    %edi
 8048256:	73 74                	jae    80482cc <_init-0x14>
 8048258:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 804825f:	64 
 8048260:	00 70 75             	add    %dh,0x75(%eax)
 8048263:	74 73                	je     80482d8 <_init-0x8>
 8048265:	00 70 72             	add    %dh,0x72(%eax)
 8048268:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804826f:	6c                   	insb   (%dx),%es:(%edi)
 8048270:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048277:	72 74                	jb     80482ed <_init+0xd>
 8048279:	5f                   	pop    %edi
 804827a:	6d                   	insl   (%dx),%es:(%edi)
 804827b:	61                   	popa   
 804827c:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 8048283:	43                   	inc    %ebx
 8048284:	5f                   	pop    %edi
 8048285:	32 2e                	xor    (%esi),%ch
 8048287:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

0804828a <.gnu.version>:
 804828a:	00 00                	add    %al,(%eax)
 804828c:	00 00                	add    %al,(%eax)
 804828e:	02 00                	add    (%eax),%al
 8048290:	02 00                	add    (%eax),%al
 8048292:	02 00                	add    (%eax),%al
 8048294:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048298 <.gnu.version_r>:
 8048298:	01 00                	add    %eax,(%eax)
 804829a:	01 00                	add    %eax,(%eax)
 804829c:	10 00                	adc    %al,(%eax)
 804829e:	00 00                	add    %al,(%eax)
 80482a0:	10 00                	adc    %al,(%eax)
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	00 00                	add    %al,(%eax)
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	10 69 69             	adc    %ch,0x69(%ecx)
 80482ab:	0d 00 00 02 00       	or     $0x20000,%eax
 80482b0:	47                   	inc    %edi
 80482b1:	00 00                	add    %al,(%eax)
 80482b3:	00 00                	add    %al,(%eax)
 80482b5:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482b8 <.rel.dyn>:
 80482b8:	f0 9f                	lock lahf 
 80482ba:	04 08                	add    $0x8,%al
 80482bc:	06                   	push   %es
 80482bd:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .rel.plt:

080482c0 <.rel.plt>:
 80482c0:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80482c6:	00 00                	add    %al,(%eax)
 80482c8:	04 a0                	add    $0xa0,%al
 80482ca:	04 08                	add    $0x8,%al
 80482cc:	07                   	pop    %es
 80482cd:	02 00                	add    (%eax),%al
 80482cf:	00 08                	add    %cl,(%eax)
 80482d1:	a0 04 08 07 03       	mov    0x3070804,%al
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	0c a0                	or     $0xa0,%al
 80482da:	04 08                	add    $0x8,%al
 80482dc:	07                   	pop    %es
 80482dd:	04 00                	add    $0x0,%al
	...

Disassembly of section .init:

080482e0 <_init>:
 80482e0:	55                   	push   %ebp
 80482e1:	89 e5                	mov    %esp,%ebp
 80482e3:	53                   	push   %ebx
 80482e4:	83 ec 04             	sub    $0x4,%esp
 80482e7:	e8 00 00 00 00       	call   80482ec <_init+0xc>
 80482ec:	5b                   	pop    %ebx
 80482ed:	81 c3 08 1d 00 00    	add    $0x1d08,%ebx
 80482f3:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 80482f9:	85 d2                	test   %edx,%edx
 80482fb:	74 05                	je     8048302 <_init+0x22>
 80482fd:	e8 1e 00 00 00       	call   8048320 <__gmon_start__@plt>
 8048302:	e8 e9 00 00 00       	call   80483f0 <frame_dummy>
 8048307:	e8 24 02 00 00       	call   8048530 <__do_global_ctors_aux>
 804830c:	58                   	pop    %eax
 804830d:	5b                   	pop    %ebx
 804830e:	c9                   	leave  
 804830f:	c3                   	ret    

Disassembly of section .plt:

08048310 <__gmon_start__@plt-0x10>:
 8048310:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048316:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804831c:	00 00                	add    %al,(%eax)
	...

08048320 <__gmon_start__@plt>:
 8048320:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048326:	68 00 00 00 00       	push   $0x0
 804832b:	e9 e0 ff ff ff       	jmp    8048310 <_init+0x30>

08048330 <__libc_start_main@plt>:
 8048330:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048336:	68 08 00 00 00       	push   $0x8
 804833b:	e9 d0 ff ff ff       	jmp    8048310 <_init+0x30>

08048340 <printf@plt>:
 8048340:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048346:	68 10 00 00 00       	push   $0x10
 804834b:	e9 c0 ff ff ff       	jmp    8048310 <_init+0x30>

08048350 <puts@plt>:
 8048350:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048356:	68 18 00 00 00       	push   $0x18
 804835b:	e9 b0 ff ff ff       	jmp    8048310 <_init+0x30>

Disassembly of section .text:

08048360 <_start>:
 8048360:	31 ed                	xor    %ebp,%ebp
 8048362:	5e                   	pop    %esi
 8048363:	89 e1                	mov    %esp,%ecx
 8048365:	83 e4 f0             	and    $0xfffffff0,%esp
 8048368:	50                   	push   %eax
 8048369:	54                   	push   %esp
 804836a:	52                   	push   %edx
 804836b:	68 c0 84 04 08       	push   $0x80484c0
 8048370:	68 d0 84 04 08       	push   $0x80484d0
 8048375:	51                   	push   %ecx
 8048376:	56                   	push   %esi
 8048377:	68 14 84 04 08       	push   $0x8048414
 804837c:	e8 af ff ff ff       	call   8048330 <__libc_start_main@plt>
 8048381:	f4                   	hlt    
 8048382:	90                   	nop
 8048383:	90                   	nop
 8048384:	90                   	nop
 8048385:	90                   	nop
 8048386:	90                   	nop
 8048387:	90                   	nop
 8048388:	90                   	nop
 8048389:	90                   	nop
 804838a:	90                   	nop
 804838b:	90                   	nop
 804838c:	90                   	nop
 804838d:	90                   	nop
 804838e:	90                   	nop
 804838f:	90                   	nop

08048390 <__do_global_dtors_aux>:
 8048390:	55                   	push   %ebp
 8048391:	89 e5                	mov    %esp,%ebp
 8048393:	53                   	push   %ebx
 8048394:	83 ec 04             	sub    $0x4,%esp
 8048397:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 804839e:	75 3f                	jne    80483df <__do_global_dtors_aux+0x4f>
 80483a0:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483a5:	bb 18 9f 04 08       	mov    $0x8049f18,%ebx
 80483aa:	81 eb 14 9f 04 08    	sub    $0x8049f14,%ebx
 80483b0:	c1 fb 02             	sar    $0x2,%ebx
 80483b3:	83 eb 01             	sub    $0x1,%ebx
 80483b6:	39 d8                	cmp    %ebx,%eax
 80483b8:	73 1e                	jae    80483d8 <__do_global_dtors_aux+0x48>
 80483ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483c0:	83 c0 01             	add    $0x1,%eax
 80483c3:	a3 1c a0 04 08       	mov    %eax,0x804a01c
 80483c8:	ff 14 85 14 9f 04 08 	call   *0x8049f14(,%eax,4)
 80483cf:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483d4:	39 d8                	cmp    %ebx,%eax
 80483d6:	72 e8                	jb     80483c0 <__do_global_dtors_aux+0x30>
 80483d8:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 80483df:	83 c4 04             	add    $0x4,%esp
 80483e2:	5b                   	pop    %ebx
 80483e3:	5d                   	pop    %ebp
 80483e4:	c3                   	ret    
 80483e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483f0 <frame_dummy>:
 80483f0:	55                   	push   %ebp
 80483f1:	89 e5                	mov    %esp,%ebp
 80483f3:	83 ec 18             	sub    $0x18,%esp
 80483f6:	a1 1c 9f 04 08       	mov    0x8049f1c,%eax
 80483fb:	85 c0                	test   %eax,%eax
 80483fd:	74 12                	je     8048411 <frame_dummy+0x21>
 80483ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8048404:	85 c0                	test   %eax,%eax
 8048406:	74 09                	je     8048411 <frame_dummy+0x21>
 8048408:	c7 04 24 1c 9f 04 08 	movl   $0x8049f1c,(%esp)
 804840f:	ff d0                	call   *%eax
 8048411:	c9                   	leave  
 8048412:	c3                   	ret    
 8048413:	90                   	nop

08048414 <main>:
 8048414:	55                   	push   %ebp
 8048415:	89 e5                	mov    %esp,%ebp
 8048417:	83 e4 f0             	and    $0xfffffff0,%esp
 804841a:	83 ec 20             	sub    $0x20,%esp
 804841d:	c7 44 24 1c 75 81 04 	movl   $0x8048175,0x1c(%esp)
 8048424:	08 
 8048425:	c7 44 24 18 00 80 04 	movl   $0x8048000,0x18(%esp)
 804842c:	08 
 804842d:	c7 04 24 80 85 04 08 	movl   $0x8048580,(%esp)
 8048434:	e8 17 ff ff ff       	call   8048350 <puts@plt>
 8048439:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804843d:	b8 99 85 04 08       	mov    $0x8048599,%eax
 8048442:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048446:	89 04 24             	mov    %eax,(%esp)
 8048449:	e8 f2 fe ff ff       	call   8048340 <printf@plt>
 804844e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048452:	8b 10                	mov    (%eax),%edx
 8048454:	b8 a3 85 04 08       	mov    $0x80485a3,%eax
 8048459:	89 54 24 04          	mov    %edx,0x4(%esp)
 804845d:	89 04 24             	mov    %eax,(%esp)
 8048460:	e8 db fe ff ff       	call   8048340 <printf@plt>
 8048465:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048469:	83 c0 04             	add    $0x4,%eax
 804846c:	8b 10                	mov    (%eax),%edx
 804846e:	b8 ae 85 04 08       	mov    $0x80485ae,%eax
 8048473:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048477:	89 04 24             	mov    %eax,(%esp)
 804847a:	e8 c1 fe ff ff       	call   8048340 <printf@plt>
 804847f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048483:	8b 10                	mov    (%eax),%edx
 8048485:	b8 bd 85 04 08       	mov    $0x80485bd,%eax
 804848a:	89 54 24 04          	mov    %edx,0x4(%esp)
 804848e:	89 04 24             	mov    %eax,(%esp)
 8048491:	e8 aa fe ff ff       	call   8048340 <printf@plt>
 8048496:	b8 00 80 04 08       	mov    $0x8048000,%eax
 804849b:	8b 10                	mov    (%eax),%edx
 804849d:	b8 c8 85 04 08       	mov    $0x80485c8,%eax
 80484a2:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484a6:	89 04 24             	mov    %eax,(%esp)
 80484a9:	e8 92 fe ff ff       	call   8048340 <printf@plt>
 80484ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80484b3:	c9                   	leave  
 80484b4:	c3                   	ret    
 80484b5:	90                   	nop
 80484b6:	90                   	nop
 80484b7:	90                   	nop
 80484b8:	90                   	nop
 80484b9:	90                   	nop
 80484ba:	90                   	nop
 80484bb:	90                   	nop
 80484bc:	90                   	nop
 80484bd:	90                   	nop
 80484be:	90                   	nop
 80484bf:	90                   	nop

080484c0 <__libc_csu_fini>:
 80484c0:	55                   	push   %ebp
 80484c1:	89 e5                	mov    %esp,%ebp
 80484c3:	5d                   	pop    %ebp
 80484c4:	c3                   	ret    
 80484c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484d0 <__libc_csu_init>:
 80484d0:	55                   	push   %ebp
 80484d1:	89 e5                	mov    %esp,%ebp
 80484d3:	57                   	push   %edi
 80484d4:	56                   	push   %esi
 80484d5:	53                   	push   %ebx
 80484d6:	e8 4f 00 00 00       	call   804852a <__i686.get_pc_thunk.bx>
 80484db:	81 c3 19 1b 00 00    	add    $0x1b19,%ebx
 80484e1:	83 ec 1c             	sub    $0x1c,%esp
 80484e4:	e8 f7 fd ff ff       	call   80482e0 <_init>
 80484e9:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 80484ef:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 80484f5:	29 c7                	sub    %eax,%edi
 80484f7:	c1 ff 02             	sar    $0x2,%edi
 80484fa:	85 ff                	test   %edi,%edi
 80484fc:	74 24                	je     8048522 <__libc_csu_init+0x52>
 80484fe:	31 f6                	xor    %esi,%esi
 8048500:	8b 45 10             	mov    0x10(%ebp),%eax
 8048503:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048507:	8b 45 0c             	mov    0xc(%ebp),%eax
 804850a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804850e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048511:	89 04 24             	mov    %eax,(%esp)
 8048514:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 804851b:	83 c6 01             	add    $0x1,%esi
 804851e:	39 fe                	cmp    %edi,%esi
 8048520:	72 de                	jb     8048500 <__libc_csu_init+0x30>
 8048522:	83 c4 1c             	add    $0x1c,%esp
 8048525:	5b                   	pop    %ebx
 8048526:	5e                   	pop    %esi
 8048527:	5f                   	pop    %edi
 8048528:	5d                   	pop    %ebp
 8048529:	c3                   	ret    

0804852a <__i686.get_pc_thunk.bx>:
 804852a:	8b 1c 24             	mov    (%esp),%ebx
 804852d:	c3                   	ret    
 804852e:	90                   	nop
 804852f:	90                   	nop

08048530 <__do_global_ctors_aux>:
 8048530:	55                   	push   %ebp
 8048531:	89 e5                	mov    %esp,%ebp
 8048533:	53                   	push   %ebx
 8048534:	83 ec 04             	sub    $0x4,%esp
 8048537:	a1 0c 9f 04 08       	mov    0x8049f0c,%eax
 804853c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804853f:	74 13                	je     8048554 <__do_global_ctors_aux+0x24>
 8048541:	bb 0c 9f 04 08       	mov    $0x8049f0c,%ebx
 8048546:	66 90                	xchg   %ax,%ax
 8048548:	83 eb 04             	sub    $0x4,%ebx
 804854b:	ff d0                	call   *%eax
 804854d:	8b 03                	mov    (%ebx),%eax
 804854f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048552:	75 f4                	jne    8048548 <__do_global_ctors_aux+0x18>
 8048554:	83 c4 04             	add    $0x4,%esp
 8048557:	5b                   	pop    %ebx
 8048558:	5d                   	pop    %ebp
 8048559:	c3                   	ret    
 804855a:	90                   	nop
 804855b:	90                   	nop

Disassembly of section .fini:

0804855c <_fini>:
 804855c:	55                   	push   %ebp
 804855d:	89 e5                	mov    %esp,%ebp
 804855f:	53                   	push   %ebx
 8048560:	83 ec 04             	sub    $0x4,%esp
 8048563:	e8 00 00 00 00       	call   8048568 <_fini+0xc>
 8048568:	5b                   	pop    %ebx
 8048569:	81 c3 8c 1a 00 00    	add    $0x1a8c,%ebx
 804856f:	e8 1c fe ff ff       	call   8048390 <__do_global_dtors_aux>
 8048574:	59                   	pop    %ecx
 8048575:	5b                   	pop    %ebx
 8048576:	c9                   	leave  
 8048577:	c3                   	ret    

Disassembly of section .rodata:

08048578 <_fp_hw>:
 8048578:	03 00                	add    (%eax),%eax
	...

0804857c <_IO_stdin_used>:
 804857c:	01 00                	add    %eax,(%eax)
 804857e:	02 00                	add    (%eax),%al
 8048580:	64                   	fs
 8048581:	65                   	gs
 8048582:	6d                   	insl   (%dx),%es:(%edi)
 8048583:	6f                   	outsl  %ds:(%esi),(%dx)
 8048584:	20 70 6f             	and    %dh,0x6f(%eax)
 8048587:	69 6e 74 65 72 20 64 	imul   $0x64207265,0x74(%esi),%ebp
 804858e:	65 66 69 6e 69 74 69 	imul   $0x6974,%gs:0x69(%esi),%bp
 8048595:	6f                   	outsl  %ds:(%esi),(%dx)
 8048596:	6e                   	outsb  %ds:(%esi),(%dx)
 8048597:	20 00                	and    %al,(%eax)
 8048599:	70 20                	jo     80485bb <_IO_stdin_used+0x3f>
 804859b:	3d 20 30 78 25       	cmp    $0x25783020,%eax
 80485a0:	78 0a                	js     80485ac <_IO_stdin_used+0x30>
 80485a2:	00 2a                	add    %ch,(%edx)
 80485a4:	70 20                	jo     80485c6 <_IO_stdin_used+0x4a>
 80485a6:	3d 20 30 78 25       	cmp    $0x25783020,%eax
 80485ab:	78 0a                	js     80485b7 <_IO_stdin_used+0x3b>
 80485ad:	00 2a                	add    %ch,(%edx)
 80485af:	28 70 2b             	sub    %dh,0x2b(%eax)
 80485b2:	31 29                	xor    %ebp,(%ecx)
 80485b4:	20 3d 20 30 78 25    	and    %bh,0x25783020
 80485ba:	78 0a                	js     80485c6 <_IO_stdin_used+0x4a>
 80485bc:	00 2a                	add    %ch,(%edx)
 80485be:	61                   	popa   
 80485bf:	20 3d 20 30 78 25    	and    %bh,0x25783020
 80485c5:	78 0a                	js     80485d1 <_IO_stdin_used+0x55>
 80485c7:	00 30                	add    %dh,(%eax)
 80485c9:	78 38                	js     8048603 <__FRAME_END__+0x27>
 80485cb:	30 34 38             	xor    %dh,(%eax,%edi,1)
 80485ce:	30 30                	xor    %dh,(%eax)
 80485d0:	30 20                	xor    %ah,(%eax)
 80485d2:	20 3d 20 30 78 25    	and    %bh,0x25783020
 80485d8:	78 0a                	js     80485e4 <__FRAME_END__+0x8>
	...

Disassembly of section .eh_frame:

080485dc <__FRAME_END__>:
 80485dc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f0c <__CTOR_LIST__>:
 8049f0c:	ff                   	(bad)  
 8049f0d:	ff                   	(bad)  
 8049f0e:	ff                   	(bad)  
 8049f0f:	ff 00                	incl   (%eax)

08049f10 <__CTOR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f14 <__DTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__DTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f1c <__JCR_END__>:
 8049f1c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f20 <_DYNAMIC>:
 8049f20:	01 00                	add    %eax,(%eax)
 8049f22:	00 00                	add    %al,(%eax)
 8049f24:	10 00                	adc    %al,(%eax)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	0c 00                	or     $0x0,%al
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	e0 82                	loopne 8049eb0 <__FRAME_END__+0x18d4>
 8049f2e:	04 08                	add    $0x8,%al
 8049f30:	0d 00 00 00 5c       	or     $0x5c000000,%eax
 8049f35:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	8c 81 04 08 f5 fe    	mov    %es,-0x10af7fc(%ecx)
 8049f42:	ff 6f b8             	ljmp   *-0x48(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	38 82 04 08 06 00    	cmp    %al,0x60804(%edx)
 8049f52:	00 00                	add    %al,(%eax)
 8049f54:	d8 81 04 08 0a 00    	fadds  0xa0804(%ecx)
 8049f5a:	00 00                	add    %al,(%eax)
 8049f5c:	51                   	push   %ecx
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	20 00                	and    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 c0                	add    %al,%al
 8049f8d:	82                   	(bad)  
 8049f8e:	04 08                	add    $0x8,%al
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	b8 82 04 08 12       	mov    $0x12080482,%eax
 8049f99:	00 00                	add    %al,(%eax)
 8049f9b:	00 08                	add    %cl,(%eax)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 13                	add    %dl,(%ebx)
 8049fa1:	00 00                	add    %al,(%eax)
 8049fa3:	00 08                	add    %cl,(%eax)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 fe                	add    %bh,%dh
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 98             	ljmp   *-0x68(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 8a             	ljmp   *-0x76(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	20 9f 04 08 00 00    	and    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	26 83 04 08 36       	addl   $0x36,%es:(%eax,%ecx,1)
 804a005:	83 04 08 46          	addl   $0x46,(%eax,%ecx,1)
 804a009:	83 04 08 56          	addl   $0x56,(%eax,%ecx,1)
 804a00d:	83                   	.byte 0x83
 804a00e:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a010 <__data_start>:
 804a010:	00 00                	add    %al,(%eax)
	...

0804a014 <__dso_handle>:
 804a014:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a018 <completed.7021>:
 804a018:	00 00                	add    %al,(%eax)
	...

0804a01c <dtor_idx.7023>:
 804a01c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048268>
   a:	74 75                	je     81 <_init-0x804825f>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	34 2e                	xor    $0x2e,%al
  11:	33 2d 34 75 62 75    	xor    0x75627534,%ebp
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048251>
  1a:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  1f:	34 2e                	xor    $0x2e,%al
  21:	33 00                	xor    (%eax),%eax
